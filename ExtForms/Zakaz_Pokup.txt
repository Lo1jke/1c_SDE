//*****************************************************************************
// Описание переменных 
Перем ДатаОплаты;
Перем СписокДействий;
Перем СтарыйКлиент;
Перем СтараяДата;
Перем НачальнаяДатаДокумента; // Для контроля даты документа
Перем ОстаткиТоваров, РезервыТоваров, ОбщРег; 
Перем ПолноеИмяФайлаОтвета;
Перем УпрКлиент;
Перем ДатаСборки;
Перем БуфКлиент; //Клиент, которого мы первый раз выбираем, нет сил разбираться в этой хуйне, которую понаписали внедренцы

//*****************************************************************************//
// "служебные" функции и процедуры                                             //
//                                                                             //
//*****************************************************************************//

//ФУНКЦИИ И ПРОЦЕДУРЫ, ДОБАВЛЕННЫЕ В КОД ДЛЯ ЗАКОНА ОТ 01.01.08 ПРО НДС НА ПО
	

Функция ВозвратКурса()   //Возвращаем текущий курс, чтобы вывести на форму
	Возврат ""+глПолучитьКурсВалютыУЕ(ДатаДок)+" руб.";
КонецФункции	

Функция  СоздатьДоговор(Клиент) 
	Если Партнер = 1 Тогда
		СпрЛицДоговоров = СоздатьОбъект("Справочник.ЛицДоговора");
		СпрЛицДоговоров.ИспользоватьВладельца(Клиент);
		Если Вопрос("Создать лицензионный договор?","Да+Нет") = "Да" Тогда
			СпрЛицДоговоров.Новый();
			СпрЛицДоговоров.Наименование = "от "+ТекущаяДата();
			СпрЛицДоговоров.Записать();
			Сообщить("Лицензионный договор "+СпрЛицДоговоров.ТекущийЭлемент()+" создан!");
			ЛицензДоговор = СпрЛицДоговоров.ТекущийЭлемент();
		КонецЕсли;
	КонецЕсли;
КонецФункции

Функция ПроверкаСуществованияЛицензионногоДоговора(Клиент)
	СпрЛицДоговоров = СоздатьОбъект("Справочник.ЛицДоговора");
	СпрЛицДоговоров.ИспользоватьВладельца(Клиент);
	СпрЛицДоговоров.ВыбратьЭлементы();
	Пока СпрЛицДоговоров.ПолучитьЭлемент()> 0 Цикл
		Договор = СпрЛицДоговоров.ТекущийЭлемент();
		Если ПустоеЗначение(Договор) = 0 Тогда
			Возврат СпрЛицДоговоров.ТекущийЭлемент();
		Иначе
			ПолучитьПустоеЗначение("Справочник.ЛицДоговора");
		КонецЕсли;
	КонецЦикла;		
КонецФункции 

Процедура ПросмотрДоговора(Элем)
	Если ПустоеЗначение(ЛицензДоговор) = 0 Тогда
		Конт= 0;
		ОткрытьФорму(Элем,Конт,0);
		//ЛицензДоговор = Конт;
		//Получен = ЛицензДоговор.Получен;
		//Если Получен = 1 Тогда	
		//	Форма.ТекстПолучения.Заголовок("Договор получен "+Элем.ДатаПолучения+" "+Элем.Получил);
		//КонецЕсли;
	Иначе
		Сообщить("Не выбран договор");
	КонецЕсли;	
КонецПроцедуры	

Процедура ПолучениеДоговора()
Если СоздатьЛицДоговор = 1 Тогда
	 КтоПринялЛицДоговор = ИмяПользователя();
	 ДатаПринятияЛицДоговора = ТекущаяДата();
	 ТекстПолучения="Договор получен "+ДатаПринятияЛицДоговора+" "+КтоПринялЛицДоговор;
	 Форма.Партнер.Доступность(0);
	 Форма.Получен.Доступность(0);
	 Форма.СоздатьЛицДоговор.Доступность(0);
	 Форма.ЛицензДоговор.Доступность(0);
	 Форма.Флаг.Доступность(0);
Иначе
	Сообщить("Необходимо создать лицензионный договор!");
	Получен = 0;
КонецЕсли;	
КонецПроцедуры

Процедура Партнер()
	Если Партнер = 1 Тогда
		Форма.Получен.Доступность(0);
	Иначе
		Форма.Получен.Доступность(1);
	КонецЕсли;
	Если СоздатьЛицДоговор = 1 Тогда
		СоздатьДоговор(Клиент);
	КонецЕсли;	
КонецПроцедуры	
//КОНЕЦ БЛОКА ФУНКЦИИ ПО ЗАКОНУ 

Функция Вес()
	перем ОбщийВес;
	ОбщийВес=0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если Товар.Выбран() = 0 Тогда
		КонецЕсли;
		ОбщийВес=ОбщийВес+Товар.Вес*Количество;	
	КонецЦикла; 
	Возврат ОбщийВес; 
КонецФункции

Процедура ФлагНДС()
	Если Флаг = 0 Тогда
		
		Форма.Партнер.Доступность(0);
		Форма.Получен.Доступность(0);
		Форма.СоздатьЛицДоговор.Доступность(0);
		Форма.ЛицензДоговор.Доступность(0);
		ЛицензДоговор = ПолучитьПустоеЗначение("Справочник.ЛицДоговора");
		Партнер = 0;
		СоздатьЛицДоговор = 0;
		Получен = 0;
		ТекстПолучения="Получен";
	Иначе
		Форма.Партнер.Доступность(1);
		Форма.Получен.Доступность(1);
		Форма.СоздатьЛицДоговор.Доступность(1);
		Форма.ЛицензДоговор.Доступность(0);
		ЛицензДоговор = ПолучитьПустоеЗначение("Справочник.ЛицДоговора");
		Партнер = 0;
		СоздатьЛицДоговор = 0;
		Получен = 0;
		ТекстПолучения="Получен";
	КонецЕсли;	
КонецПроцедуры 


//Функция СоответсвиеСтрокИСЗ()
//	//Перечень лицензий
//	СЗЛицензии = СоздатьОбъект("СписокЗначений");
//	СЗЛицензии.ДобавитьЗначение("SD4 Enterprise");
//	
//	//...ТехПоддержки
//	СЗТехПоддержка = СоздатьОбъект("СписокЗначений");
//	СЗТехПоддержка.ДобавитьЗначение("SD4 Support Year");
//	
//	//...Апгрейд
//	СЗАпргрейд = СоздатьОбъект("СписокЗначений");
//	СЗАпргрейд.ДобавитьЗначение("SD4 Uprgade");
//	
//	//...ЗаменаДомена
//	СЗЗаменаДомена = СоздатьОбъект("СписокЗначений");
//	СЗЗаменаДомена.ДобавитьЗначение("SD4 New Domain");
//	
//	//...Promokit
//	СЗPromokit = СоздатьОбъект("СписокЗначений");
//	СЗPromokit.ДобавитьЗначение("SD4 Promokit");
//	
//		//Проверяем по массиву лицензий
//		Если СЗЛицензии.Принадлежит(Товар.Наименование)=1 Тогда
//			Возврат 1; //Позиция находится в списке лицензий
//		КонецЕсли;	
//		//... по массиву техподдержки
//		Если СЗТехПоддержка.Принадлежит(Товар.Наименование)=1 Тогда
//			Возврат 2; //Позиция находится в списке ТП
//		КонецЕсли;	
//		//... по массиву апгрейдов
//		Если СЗАпргрейд.Принадлежит(Товар.Наименование)=1 Тогда		
//			Возврат 3; //Позиция находится в списке апгрейдов
//		КонецЕсли;	
//		//... по массиву замены домена
//		Если СЗЗаменаДомена.Принадлежит(Товар.Наименование)=1 Тогда
//			Возврат 4; //Позиция находится в списке замены домена
//		КонецЕсли;	
//		//... по массиву Promokit
//		Если СЗPromokit.Принадлежит(Товар.Наименование)=1 Тогда
//			Возврат 5; //Позиция находится в списке Promokit
//		КонецЕсли;	
//
//	
//	Возврат 0;
//
//КонецФункции	
Процедура message_sde(mess_text, param)
	Если param = 1 Тогда
		Сообщить(mess_text + "...");
	Иначе
		Возврат;
	КонецЕсли
		
КонецПроцедуры


Функция sde_varif() //checking marker SDE in product
	Если Товар.SDE = 1 Тогда
		message_sde("Найден товар SDE", sde_loggin);
		Возврат 1;
	КонецЕсли
	Возврат 0;
	
КонецФункции

Функция sde_varif_license_params() // checking params of license
	prod_params = СоздатьОбъект("Справочник.ПараметрыЛицензированияSDE");
	prod_params.ИспользоватьРодителя(Товар);
	Если prod_params.Выбран() = 0 Тогда
		Возврат 0;
	Иначе
		prod_params.Выбрать("Выбирите необходимые параметры форматирования",);
		Если prod_param.Выбран() = 0 Тогда
			Возврат -1;
		Иначе	
			Возврат prod_param.ТекущийЭлемент();	
		КонецЕсли
	КонецЕсли	
КонецФункции

//Функция GenSupportID()
//	ID = НомерДок + ДатаЧисло(ДатаДок) + ДатаМесяц(ДатаДок) + ДатаГод(ДатаДок);
//	Возврат ID;	
//КонецФункции	

//*****************************************************************************
// 
//Функция SDETest()
//	//Перечень Флагов
//	Promokit = 0;
//	ПризнакЧастичнойПокупки = 0; //Если есть позиция Лицензии, но нет строки ТП, или наоборот
//	ПризнакПолнойПокупки = 0; //Если есть позиция Лицензии и позиция ТП
//	//...
//	
//	ВыбратьСтроки();
//	Пока ПолучитьСтроку()=1 Цикл
//	
//		Если СоответсвиеСтрокИСЗ() = 0 Тогда
//			Возврат 0; // Не найдены нужные позиции
//		ИначеЕсли СоответсвиеСтрокИСЗ() = 1 Тогда
//			
//			Если ПризнакЧастичнойПокупки = 1 Тогда //Если уже есть ТП в заказе
//				ПризнакПолнойПокупки = 1; //Полный комплект
//			Иначе
//				ПризнакЧастичнойПокупки = 1; //Ждем недостающей позиции (ТП)
//			КонецЕсли;
//		
//		ИначеЕсли СоответсвиеСтрокИСЗ() = 2 Тогда
//			
//			Если ПризнакЧастичнойПокупки = 1 Тогда //Если уже есть лицензия в заказе
//				ПризнакПолнойПокупки = 1; //Полный комплект
//			Иначе
//				ПризнакЧастичнойПокупки = 1; //Ждем недостающей позиции (лицензии)
//			КонецЕсли;
//		
//		ИначеЕсли СоответсвиеСтрокИСЗ() = 3 Тогда
//			Возврат 3;	
//		ИначеЕсли СоответсвиеСтрокИСЗ() = 4 Тогда		
//			Возврат 4;                                     
//		ИначеЕсли СоответсвиеСтрокИСЗ() = 5 Тогда	
//			Promokit = 1;
//		КонецЕсли;
//	
//	КонецЦикла;	
//	
//	Если ПризнакПолнойПокупки = 1 Тогда  //Обрабатываем элемент Покупка
//	//	Сообщить(GenSupportID());
//	   // глРеестрЗаказовSDE(Контекст);
//		
//		Возврат 0;
//	КонецЕсли;	
//			
//КонецФункции	

Функция SDETest()
	Если sde_varif() = 0 Тогда
		Возврат 0;
	КонецЕсли

	Если Вопрос("Издаем лицензии на найденные позиции?", 4) = Нет Тогда
		Возврат -1;
	КонецЕсли
	
		

КонецФункции


//*****************************************************************************
// 
Функция ПроверитьОсновныеПоля()
	Маркер = 1;
	Если ПустоеЗначение(Клиент) = 1 Тогда
		Предупреждение ("Заполните поле клиент");
		Маркер = 0;
	КонецЕсли;
	Возврат Маркер;
КонецФункции
//*****************************************************************************
// Устанавливает категорию цены товара в зависимости от продукт. направления и статуса клиента                                                                          //
Функция УстановитьКатегорию(УпрКлиент)
	Перем ЗначениеТипЦены;
	СпрНаправления = СоздатьОбъект("Справочник.НаправленияКонтрагента"); 
	СпрНаправления.ИспользоватьВладельца(УпрКлиент); 
	СпрНаправления.ВыбратьЭлементы();
	ЗначениеТипЦены = Константа.КатегорияЦеныПоУмолчанию;
	Пока СпрНаправления.ПолучитьЭлемент() =1 Цикл
		Если ПустоеЗначение(Товар.ПродуктовоеНаправление) = 1 Тогда
			Если СпрНаправления.ПродуктовоеНаправление = Товар.Родитель.ПродуктовоеНаправление Тогда
				ЗначениеТипЦены =?(ПустоеЗначение(СпрНаправления.ТипЦен)=0, СпрНаправления.ТипЦен,Константа.КатегорияЦеныПоУмолчанию); 
			КонецЕсли;
		Иначе
			Если СпрНаправления.ПродуктовоеНаправление = Товар.ПродуктовоеНаправление Тогда
				ЗначениеТипЦены =?(ПустоеЗначение(СпрНаправления.ТипЦен)=0, СпрНаправления.ТипЦен,Константа.КатегорияЦеныПоУмолчанию);
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;
	
	Возврат ЗначениеТипЦены;
КонецФункции
//*******************************************************************************************************
Процедура ПересчетД()
	
	ОбщийВес=0;
	
	ВыбратьСтроки();
	
	Пока ПолучитьСтроку()=1 Цикл
		
		Если Товар.Выбран() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		ОбщийВес=ОбщийВес+Товар.Вес*Количество;	
		
		Если Товар.Вес=0 Тогда
			Сообщить("Для товара "+ Товар+ " не указан вес!");
		КонецЕсли;	
	КонецЦикла; 
	
	ВыбратьСтроки(); 
	
	Пока ПолучитьСтроку()=1 Цикл
		
		Если Товар.Выбран() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Если ОбщийВес<>0 Тогда
			Если Валюта=ВалютаД Тогда
				Сумма   = Сумма-СуммаД;
				Цена    = (Сумма+ЦенаД*Товар.Вес*Количество/ОбщийВес)/Количество;
				Сумма	= Цена*Количество;
				СуммаД  = ЦенаД*Товар.Вес*Количество/ОбщийВес;
			Иначе
				Сумма   = Сумма-СуммаД;
				Цена    = (Сумма+ЦенаД*ВалютаД.Курс.Получить(Дата_Курса)/Валюта.Курс.Получить(Дата_Курса)*Товар.Вес*Количество/ОбщийВес)/Количество;
				Сумма	= Цена*Количество;
				СуммаД  = ЦенаД*ВалютаД.Курс.Получить(Дата_Курса)/Валюта.Курс.Получить(Дата_Курса)*Товар.Вес*Количество/ОбщийВес;
			КонецЕсли; 
			
			глВыч_суммы_накл(Контекст);
			
		Иначе
			Предупреждение("Не указан вес товаров! Цен доставки не может распределиться пропорционально!
			|Спецификация документа не будет изменена!"); 
			
		КонецЕсли;
		
	КонецЦикла; 
	
КонецПроцедуры 

//*******************************************************************************************************
Процедура ПриВыбореПеревозчика() 
	
	Если Доставка=0 Тогда
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	
	
	ОбщийВес=0;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если Товар.Выбран() = 0 Тогда
			Возврат;
		КонецЕсли;
		ОбщийВес=ОбщийВес+Товар.Вес*Количество;	
	КонецЦикла; 
	//Форма.Вес.Заголовок(ОбщийВес);
	//расчет веса 
	
	ПрайсД = СоздатьОбъект("Справочник.Прайс_Доставки");
	ДИАД   = СоздатьОбъект("Справочник.ПределыПоПрайсу_Доставки");
	ЦСПД   = СоздатьОбъект("Справочник.ЦеныПрайса_Доставки");
	
	ПрайсД.ИспользоватьВладельца(Перевозчик);
	Перевозчики = СоздатьОбъект("Справочник.Перевозчики");
	Перевозчики.ИспользоватьВладельца(Клиент.Город);
	Перевозчики.ВыбратьЭлементы();
	Пока Перевозчики.ПолучитьЭлемент() = 1 Цикл
		Если Перевозчики.Перевозчик = Перевозчик
		Тогда 
			Зона = Перевозчики.Зона
		КонецЕсли;	
	КонецЦикла;
	
	Если ПрайсД.НайтиПоКоду(Зона,1)=1 Тогда
		НужныйРегион=ПрайсД.ТекущийЭлемент();  
		ДИАД.ИспользоватьВладельца(НужныйРегион);
		ДИАД.ВыбратьЭлементы();
		Пока ДИАД.ПолучитьЭлемент()>0 Цикл
			Если (ДИАД.ТекущийЭлемент().ПометкаУдаления()=0)
			и (ОбщийВес<=ДИАД.До)
			и (ОбщийВес>=ДИАД.От) Тогда
				НашДиапозон=ДИАД.ТекущийЭлемент();
				
				ЦСПД.ИспользоватьВладельца(НужныйРегион);
				ЦСПД.НайтиПоРеквизиту("Диапозон",НашДиапозон,0);
				
				Если СрочнаяДоставка=1 Тогда
					НашаЦена   = ЦСПД.ТекущийЭлемент().ЦенаС.Получить(Дата_Курса);
					НашаВалюта = ЦСПД.ТекущийЭлемент().ВалютаС;    
				Иначе	
					НашаЦена   = ЦСПД.ТекущийЭлемент().Цена.Получить(Дата_Курса);
					НашаВалюта = ЦСПД.ТекущийЭлемент().Валюта;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		ЦенаД   = НашаЦена;
		ВалютаД = НашаВалюта;
		
	Иначе
		Предупреждение("Цена доставки в регион "+Клиент.Регион+ " отсутствует в прайсе");
		ЦенаД   = 0;
	КонецЕсли;
	
	ПересчетД(); 
	
КонецПроцедуры 

//*******************************************************************************************************
//Возвращает клиента по управл. учёту
Функция УК()
	СпрФирм = СоздатьОбъект("Справочник.Контрагенты");
	СпрФирм.НайтиЭлемент(БуфКлиент);
	Если СпрФирм.Выбран() = 1 Тогда
	//	Сообщить(СпрФирм.ТекущийЭлемент());
	КонецЕсли;	
	ПодФирмы=СоздатьОбъект("Справочник.ПодФирмы");
	
	ПодФирмы.ВыбратьЭлементы();
	Пока ПодФирмы.ПолучитьЭлемент() = 1 Цикл
		Если (ПодФирмы.ТекущийЭлемент().Владелец = СпрФирм.ТекущийЭлемент()) И (ПодФирмы.ТекущийЭлемент().Фирма = Клиент) Тогда	
			УпрКлиент=ПодФирмы.ТекущийЭлемент().Владелец;
		    //Сообщить("!");
		Иначе
			УпрКлиент = Клиент;
		КонецЕсли;	
	КонецЦикла;
			
	//Иначе
	//	УпрКлиент=Клиент;
	//КонецЕсли;
	Возврат УпрКлиент;
	
КонецФункции

//*******************************************************************************************************
Функция ЗаголовокФормы() 
	Перем Заголовок, Название;
	Заголовок = "Заказ покупателя";
	//Форма.НазваниеДокумента.Цвет(-1);
	Название ="Заказ №";
	Если Выбран() = 1 Тогда  
		Если Проведен() = 1 Тогда
			Заголовок = Заголовок + ".Проведен";
		Иначе
			Заголовок = Заголовок + ".Не проведен";
		КонецЕсли;
	Иначе
		Заголовок = Заголовок + ".Новый";
	КонецЕсли;
	Форма.Заголовок(Заголовок);     
	Возврат Название;
КонецФункции //ЗаголовокФормы

//******************************************************************************
Процедура ОбновитьНадписи()
	Форма.ТекстОплаты.Заголовок(глСтрокаОплаты(Контекст));
	Форма.ТекстФирмы.Заголовок(глСтрокаФирмы(Контекст)); 
	Форма.Дог.Заголовок(""+НДоговор+" "+НДоговор.ТипДоговора+"");
	Если ПустоеЗначение(Грузополучатель) = 1 Тогда
		Форма.Грузопол.Видимость(0);
		Форма.Грузополучатель.Видимость(0);
	Иначе
		Форма.Грузопол.Видимость(1);
		Форма.Грузополучатель.Видимость(1);
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
Процедура ВыборГлубины()
	// Формирует и показывает дату оплаты
	ДатаОплаты=глБанковскаяДата(ДатаДок,СрокРезервирования);
КонецПроцедуры	

//******************************************************************************
Процедура ВыборДаты()
	глПриИзмененииДатыДокумента(Контекст, СтараяДата);
	
	НовНеУчитыватьНДС	=?(Фирма.НеЯвляетсяПлательшикомНДСОпт=Да,1,0);
	глИзменениеНалоговДокумента(Контекст,НеУчитыватьНДС,НовНеУчитыватьНДС,0,0);
	
	ВыборГлубины();
	ОбновитьНадписи();
КонецПроцедуры

//******************************************************************************
Функция Итого()
	// Показ итоговых сумм по документу
	Перем Результат, _Сумма, _СуммаНДС, _СуммаНП;
	
	_Сумма    = Итог("Сумма");
	_СуммаНДС = Итог("НДС");
	_СуммаНП  = Итог("СуммаНП");
	
	Если СуммаВключаетНП = 0 Тогда
		_Сумма	= _Сумма + _СуммаНП;
	КонецЕсли;
	
	Результат = ?(_Сумма	= 0, "", "Сумма=" + глФРМ(_Сумма   , Валюта, 1))+
	?(_СуммаНДС	= 0, "", " НДС="  + глФРМ(_СуммаНДС, Валюта, 1))+
	?(_СуммаНП	= 0, "", " НП="   + глФРМ(_СуммаНП , Валюта, 1));
	
	Возврат Результат;
	
КонецФункции   

// ******************************************************************************
Функция ПредставлениеСуммы()
	
	// показывать сумму нужно всегда с НП
	Если Товар.Выбран() = 0 Тогда
		Возврат "";
	Иначе
		
		Если СуммаВключаетНП = 0 Тогда
			_Сумма	= Сумма + СуммаНП;
		Иначе
			// цена уже с НП
			_Сумма	= Сумма;
		КонецЕсли;
		
		Возврат Формат(_Сумма, "Ч-15.2");
	КонецЕсли;
	
КонецФункции

//*****************************************************************************
//
Процедура УправлениеВидомКолонок()	
	// назначает заголовки и видимость колонок документа в зависимости
	// от способа расчета цен
	Если УчитыватьНП = 0 Тогда
		Форма.СуммаНП.Видимость(0);
		Форма.Всего.Видимость(0);
	ИначеЕсли СуммаВключаетНП=1 Тогда
		Форма.СуммаНП.Заголовок("в т.ч. НП");
		Форма.СуммаНП.Видимость(1);
		Форма.Всего.Видимость(0);
	Иначе//Если СуммаВключаетНП=0 Тогда
		Форма.СуммаНП.Заголовок("НП");
		Форма.СуммаНП.Видимость(1);
		Форма.Всего.Видимость(1);
	КонецЕсли;
	
КонецПроцедуры	    

//*****************************************************************************
// функции и процедуры, вызываемые из формул элементов диалога

//******************************************************************************
Процедура Взаиморасчеты()
	глПоказатьДолг(Контекст, Клиент, "Продажа");
КонецПроцедуры

//*****************************************************************************
Процедура ВыборФирмы()
	// по кнопке редактирования параметров фирмы в документе
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОфирме", КонтекстДокумента);
	Фирма.ИспользоватьДату(ДатаДок);
	НовНеУчитыватьНДС	=?(Фирма.НеЯвляетсяПлательшикомНДСОпт=Да,1,0);
	глИзменениеНалоговДокумента(Контекст,НеУчитыватьНДС,НовНеУчитыватьНДС,0,0);
	ОбновитьНадписи();
КонецПроцедуры	

//*****************************************************************************
Процедура ВыборОплаты()
	// Процедура по кнопке редактирования параметров оплаты в документе
	Перем КонтекстДокумента;
	Перем СтараяКатегорияЦен;
	СтараяКатегорияЦен = КатегорияЦен;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ИнформацияОценах", КонтекстДокумента);
	Если СтараяКатегорияЦен <> КатегорияЦен Тогда
		// изменилась категория цен
		// перерисуем
		Если ПустоеЗначение(КонтекстПодбора) = 0 Тогда
			КонтекстПодбора.Форма.Обновить();
		КонецЕсли;
	КонецЕсли;
	УправлениеВидомКолонок();
	ОбновитьНадписи();
КонецПроцедуры	
//*****************************************************************************
//алгоритм проверки цены и количества по прайсу
Процедура ПроверитьЦену()
	УпрКлиент = Клиент;
	УК();
	ЗначениеТипЦены = УстановитьКатегорию(УпрКлиент);   
	ТипЦены = ЗначениеТипЦены;
	
	Цена=ЦенаПоСетке(Товар,Количество,ТипЦены,УпрКлиент,Валюта,ДатаДок);
	
	//	Цена = глПересчет(Цена,Доллары,ДатаДок,Валюта,ДатаДок);
	Сумма=Цена*Количество;
	//КонецЕсли;	
	
	//Если Доставка=1 Тогда
	//	Если ПустоеЗначение(Перевозчик)=0 Тогда 
	//		ПриВыбореПеревозчика();
	//	КонецЕсли;
	//КонецЕсли; 
	
КонецПроцедуры
//*****************************************************************************
Процедура ВыборКлиента() // Процедура при выборе клиента в документе
	перем ВремКатегорияЦен;
	Если Клиент.Выбран()=1 Тогда
		БуфКлиент = Клиент;
		Если Вопрос("Использовать фирму для фин. учета?","Да+Нет")="Да"  Тогда
			ИспользоватьФФУ = 1;
			ГлНайтиПодчиненного(Клиент,Контекст);
			Грузополучатель="";
			ГлНайтиГрузополучателя(Клиент,Контекст);
			
			Если СтарыйКлиент <> Клиент Тогда
				// изменили клиента
				ВремКатегорияЦен = Клиент.КатегорияЦен;
				Если ПустоеЗначение(ВремКатегорияЦен) = 1 Тогда
					ВремКатегорияЦен = глПользователь.КатегорияЦен;
					
				КонецЕсли;
				Если ПустоеЗначение(ВремКатегорияЦен) = 1 Тогда
					КатегорияЦен = Константа.КатегорияЦеныПоУмолчанию;
				КонецЕсли;
				
				ВыборГлубины();
				Ндоговор="";
			КонецЕсли;
			//Править
			//	Сообщить(БуфКлиент);
			УпрКлиент = Клиент;
			УК();
			Если ВыбратьСтроки()=1 Тогда 
				Пока ПолучитьСтроку() = 1 Цикл
					//ЗначениеТипЦены = УстановитьКатегорию(УпрКлиент);    
					//ТипЦены = ЗначениеТипЦены;
					ПроверитьЦену();
				КонецЦикла;
			КонецЕсли;
		Иначе
			ИспользоватьФФУ = 0;
		КонецЕсли;
		//
	КонецЕсли;
	// Формирует и показывает дату оплаты
	СтарыйКлиент = Клиент;
		//ДОБАВЛЕНИЕ ДЛЯ НДС
	Если Флаг =1 Тогда
		//Обнуление параметров
		Форма.Партнер.Доступность(0);
		Форма.Получен.Доступность(0);
		Форма.СоздатьЛицДоговор.Доступность(0);
		Форма.ЛицензДоговор.Доступность(0);
		ЛицензДоговор = ПолучитьПустоеЗначение("Справочник.ЛицДоговора");
		Партнер = 0;
		СоздатьЛицДоговор = 0;
		Получен = 0;
		ТекстПолучения="Получен";
		//...
		
		ЛицДоговор = ПроверкаСуществованияЛицензионногоДоговора(Клиент);
		Если ПустоеЗначение(ЛицДоговор)=1 Тогда
			Форма.СоздатьЛицДоговор.Доступность(1);
			Форма.Партнер.Доступность(1);
			Форма.Получен.Доступность(1);	
		Иначе
			СпрЛицДоговоров = СоздатьОбъект("Справочник.ЛицДоговора");
			СпрЛицДоговоров.ИспользоватьВладельца(Клиент);
			СпрЛицДоговоров.Выбрать("Выберите Лицензионный Договор","");
			ЛицензДоговор = СпрЛицДоговоров.ТекущийЭлемент();
			Если СпрЛицДоговоров.ТекущийЭлемент().Получен = 1 Тогда
				Получен = 1;
				ТекстПолучения="Договор получен "+СпрЛицДоговоров.ТекущийЭлемент().ДатаПолучения+ " "+СпрЛицДоговоров.ТекущийЭлемент().Получил;
			КонецЕсли;	
			СоздатьЛицДоговор = 1;
			Форма.СоздатьЛицДоговор.Доступность(0);
			Партнер = 1;
			Форма.Партнер.Доступность(0);
			Форма.Получен.Доступность(0);
			Форма.Флаг.Доступность(0);
		КонецЕсли;
	КонецЕсли;
	//КОНЕЦ ДОБАВЛЕНИЯ
	ОбновитьНадписи();
	

КонецПроцедуры	

//*****************************************************************************
Процедура ВыборОснования()
	// Процедура по кнопке редактирования основания в документе
	Перем КонтекстДокумента;
	КонтекстДокумента = глВзятьКонтекст(Контекст);
	ОткрытьФормуМодально("Обработка.ОснованиеДокумента", КонтекстДокумента);
	// Могли изменить клиента
	ОбновитьНадписи();
КонецПроцедуры	

//******************************************************************************

Функция КонтрольОстатка()
	Перем ТекОстаток;
	
	Если (Выбран() = 0) ИЛИ (ДатаДок = ПолучитьДатуТА()) Тогда
		
		// если новый или дата равна дате ТА
		//ТекОстаток	= глПолучитьОстатокТовара(Товар, Единица, глПустаяФирма,Константа.ОсновнойСклад ,
		ТекОстаток	= глПолучитьОстатокТовара(Товар, Единица, Фирма,Константа.ОсновнойСклад ,
		?(Константа.ЗапретОтрицательногоСвободногоТовара = Да, 1, 0) );
		
		//	Если (Проведен() = 1) И (Константа.ЗапретОтрицательногоСвободногоТовара = Да) Тогда
		
		// если все таки проведен
		РегРезерв	= СоздатьОбъект("Регистр.РезервТовараУпр");
		ТекРезерв	= РегРезерв.СводныйОстаток(Товар,,,, "РезервТовара");
		
		//Если ТекРезерв > 0 Тогда
		//	
		//	// добавим к остатку резерв по текущему заказу
		//	ТекОстаток	= ТекОстаток + ТекРезерв;
		//	
		//КонецЕсли;
		
		//	КонецЕсли;			  
		
		Возврат СокрЛ(Формат(ТекОстаток, "Ч10.0")) + " из них в резерве "+СокрЛ(Формат(ТекРезерв, "Ч10.0"))+" " + Единица.ТипЕдиницы;
		
	Иначе
		Возврат "";
		
	КонецЕсли;
	
КонецФункции
//******************************************************************************

Функция КонтрольОстаткаФин()
	Перем ТекОстатокФин;
	
	Если (Выбран() = 0) ИЛИ (ДатаДок = ПолучитьДатуТА()) Тогда
		
		// если новый или дата равна дате ТА
		ТекОстатокФин	= глПолучитьОстатокТовараФин(Товар, Единица, Фирма ,?(Константа.ЗапретОтрицательногоСвободногоТовараФин = Да, 1, 0) );
		
		//	Если (Проведен() = 1) И (Константа.ЗапретОтрицательногоСвободногоТовараФин = Да) Тогда
		
		// если все таки проведен
		РегРезервФин	= СоздатьОбъект("Регистр.РезервТовараФин");
		ТекРезервФин	= РегРезервФин.СводныйОстаток(Товар,,,, "РезервТовара");
		
		//Если ТекРезервФин > 0 Тогда
		//	
		//	// добавим к остатку резерв по текущему счету
		//	ТекОстатокФин	= ТекОстатокФин + ТекРезервФин;
		//	
		//КонецЕсли;
		
		//	КонецЕсли;			  
		
		Возврат СокрЛ(Формат(ТекОстатокФин, "Ч10.0")) + " из них в резерве "+СокрЛ(Формат(ТекРезервФин, "Ч10.0"))+" " + Единица.ТипЕдиницы;
		
	Иначе
		Возврат "";
		
	КонецЕсли;
	
КонецФункции
//*****************************************************************************
// Предопределенные процедуры

//******************************************************************************
Процедура УстановкиДляМенеджеровОООАладдин()
	Спр=СоздатьОбъект("Справочник.Фирмы");
	Спр.НайтиПоНаименованию("ООО",0);
	Фирма=Спр.ТекущийЭлемент();
	Спр2=СоздатьОбъект("Справочник.БанковскиеСчета");
	Спр2.ИспользоватьВладельца(Спр.ТекущийЭлемент());
	Спр2.НайтиПоНаименованию("Основной");
	РасчетныйСчет=Спр2.ТекущийЭлемент();
	Форма.ТекстФирмы.Заголовок("ООО "+Симв(34)+"Аладдин"+Симв(34)+", р/с: Основной");
	глПриСменеТипа(Контекст);
КонецПроцедуры

Процедура ВводНового(Скопирован) //Предопределенная процедура
    //ДЛЯ НДС
	Флаг = 0;
	
	Если Найти("АлексейПроценко РябинкинаАнна Диана ВячеславТынчеров",ИмяПользователя()) = 0 Тогда       //Для них вопрос не выводим
		Если Вопрос("В заказе будут позиции не облагаемые НДС?","Да+Нет")="Да" Тогда
			Флаг = 1;
		КонецЕсли;
	Иначе
		Флаг = 0; 
	КонецЕсли;
	
	Если Флаг = 0 Тогда
		  Форма.Партнер.Доступность(0);
		  Форма.Получен.Доступность(0);
		  Форма.СоздатьЛицДоговор.Доступность(0);
		  Форма.ЛицензДоговор.Доступность(0);
	КонецЕсли;
	
	//...
	
	глЗаполнитьШапку(Контекст, Скопирован);
	Аффтар = ГлПользователь;
	Если Скопирован = 1 Тогда	//копирование документа
		
		Возврат;
	КонецЕсли;
	
	ДатаДок	= РабочаяДата();
	
	Если ПустоеЗначение(глАктивныйДоговор) = 0 Тогда
		
		Клиент			= глАктивныйДоговор.Владелец;
		КатегорияЦен	= Клиент.КатегорияЦен;
		УпрКлиент=Клиент;
	Иначе
		Клиент	= Константа.ОсновнойПокупатель;
		ВыборКлиента();
		УпрКлиент=Клиент;
	КонецЕсли;
	
	Валюта	= Константа.ОсновнаяВалютаПродажи;
	
	Если ПустоеЗначение(Валюта) = 1 Тогда
		Валюта	= Рубли;
		
	КонецЕсли;
	
	ТипУчета	=0;
	
	Дата_Курса	= ДатаДок;
	
	Если Нал=1 Тогда		
		Курс=Валюта.КурсНал.Получить(Дата_курса)/?(Валюта.Кратность=0,1,Валюта.Кратность);		
	ИначеЕсли Нал=0 Тогда
		Курс		= глКурсДляВалюты(Валюта, Дата_курса);	
	КонецЕсли;	                                              
	
	Если ПустоеЗначение(КатегорияЦен) = 1 Тогда
		КатегорияЦен	= Автор.КатегорияЦен;		
	КонецЕсли;
	
	СрокРезервирования	= Константа.ОсновнойСрокРезервирования;
	
	УчитыватьНП			= 0;
	СуммаВключаетНП 	= 1;
	
	Фирма.ИспользоватьДату(ДатаДок);
	НеУчитыватьНДС		=?(Фирма.НеЯвляетсяПлательшикомНДСОпт=Да,1,0); 
	
	Доставка =0  ;
	Форма.ЦенаД.Доступность(0); 
	Форма.ВалютаД.Доступность(0);
	Форма.ВалютаД.Доступность(0); 
	Форма.СрочнаяДоставка.Доступность(0); 

//*****************************************	
	Если Найти("БеленькийЮрий НаташаКазак РябинкинаАнна Александр_Гурин ОлегШкурко АлексейПроценко НатальяПодлесная",ИмяПользователя())=1 Тогда
			 УстановкиДляМенеджеровОООАладдин();
			 БыстрыйВыбор.ТекущаяСтрока(2);
		КонецЕсли;
//*****************************************	 


КонецПроцедуры

//******************************************************************************
Процедура ВводНаОсновании(ДокОсн) //Предопределенная процедура 
	Автор=ГлПользователь;
	Аффтар = ГлПользователь;
	Если ДокОсн.Вид()<>"Тестирование" Тогда
		Предупреждение("Документ """ + ПредставлениеВида() + """ не вводят на основании данного документа!");
		СтатусВозврата(0);
	КонецЕсли;
	Если ДокОсн.Вид()="ФиксацияБрака" Тогда
		Предупреждение("Ввод данного документа по существующему документу-основанию невозможен");
		СтатусВозврата(0);
	КонецЕсли;
	Если ДокОсн.Вид()="Тестирование" Тогда
		Если ПустоеЗначение(ДокОсн.ДокументОснование)=1 Тогда
			Предупреждение("Спецификацию табличной части документа нужно заполнить вручную");
			СтатусВозврата(0);
		КонецЕсли;
	КонецЕсли;
	
	Если ДокОсн.Вид()="Тестирование" Тогда
		Можно=0;
		ДокОсн.ВыбратьСтроки();
		Пока ДокОсн.ПолучитьСтроку()=1 Цикл
			Если ДокОсн.Результат=Перечисление.РезультатТеста.ВинаКлиента Тогда				
				Можно=1;
				ДокументОснование=ДокОсн;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Можно=0 Тогда
			Предупреждение("По данному документу-основанию нет возможности ввести новый заказ!");
			СтатусВозврата(0);
		Иначе
			ДокОсн.ВыбратьСтроки();
			Пока ДокОсн.ПолучитьСтроку()=1 Цикл
				Если ДокОсн.Результат=Перечисление.РезультатТеста.ВинаКлиента Тогда
					НоваяСтрока();
					Товар=ДокОсн.Товар;
					Количество=ДокОсн.Количество;
					Цена=ДокОсн.Цена;
					Сумма=Цена*Количество;
					Ед=Товар.БазоваяЕдиница;
					Коэффициент=1; 
					Клиент=ДокОсн.ДокументОснование.Клиент;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//***************************************************************************** 


Процедура БыстрыйВыборФирмы()	
ТекЗнач=	БыстрыйВыбор.ТекущаяСтрока();
Если ТекЗнач=1 Тогда
	Спр=СоздатьОбъект("Справочник.Фирмы");
	Спр.НайтиПоНаименованию("Аладдин");
	Фирма=Спр.ТекущийЭлемент();
	Спр2=СоздатьОбъект("Справочник.БанковскиеСчета");
	Спр2.ИспользоватьВладельца(Спр.ТекущийЭлемент());
	Спр2.НайтиПоНаименованию("Основной");
	РасчетныйСчет=Спр2.ТекущийЭлемент();
	Форма.ТекстФирмы.Заголовок("Аладдин, р/с: Основной");
КонецЕсли;
Если ТекЗнач=2 Тогда
	Спр=СоздатьОбъект("Справочник.Фирмы");
	Спр.НайтиПоНаименованию("ООО",0);
	Фирма=Спр.ТекущийЭлемент();
	Спр2=СоздатьОбъект("Справочник.БанковскиеСчета");
	Спр2.ИспользоватьВладельца(Спр.ТекущийЭлемент());
	Спр2.НайтиПоНаименованию("Основной");
	РасчетныйСчет=Спр2.ТекущийЭлемент();
	Форма.ТекстФирмы.Заголовок("ООО "+Симв(34)+"Аладдин"+Симв(34)+", р/с: Основной");
КонецЕсли;	
	
КонецПроцедуры

Процедура ПриОткрытии() //Предопределенная процедура
    
	ДатаСборки = ДатаИсп; // Сохданяем дату сборки
	
	НачальнаяДатаДокумента = ДатаДок;
	БыстрыйВыбор.ДобавитьЗначение("ЗАО Аладдин Р.Д.");
	БыстрыйВыбор.ДобавитьЗначение("ООО Аладдин");
	Форма.ИспользоватьСлой("Основной",2);
	                                          
	
	Если Найти("БеленькийЮрий",ИмяПользователя()) = 1 Тогда
		Форма.Текст_Партнер.Видимость(1);
		Форма.Текст_Партнер.Доступность(1);
		Форма.ПартнерПлатильщик.Видимость(1);
		Форма.ПартнерПлатильщик.Доступность(1);		
	КонецЕсли;	
	
	
	
	//***********************установка начальных значений в быстром выборе	
	//Спр=СоздатьОбъект("Справочник.Фирмы");
	//Спр.НайтиПоНаименованию("Аладдин");
	//ЗАОАладдин = Спр.ТекущийЭлемент();
	//Спр.НайтиПоНаименованию("ООО",0);
	//ОООАладдин = Спр.ТекущийЭлемент();
	//Если Фирма = ЗАОАладдин Тогда
	//	БыстрыйВыбор.ТекущаяСтрока(1);
	//КонецЕсли;
	//Если Фирма = ОООАладдин Тогда
	//	БыстрыйВыбор.ТекущаяСтрока(2);
		
	//	КонецЕсли;	

    //****************************Конец установки 
	
	
	
	
	
	//ЗАГЛУШКА ДЛЯ СМЕНЫ ДАТЫ
	
	
	
	
	//Если ИмяПользователя() = "БеленькийЮрий" Тогда
	//	ДатаПринятияЛицДоговора = Дата("2008","01","09");
	//	//КтоПринялЛицДоговор = ;
	//КонецЕсли;
	
	
	
	
	
	глПроверкаРазрешенияРедактирования(Контекст);
	ЕСЛИ ИмяПользователя()<>"БеленькийЮрий" ТОГДА  
		Если ДатаДок<Дата("2004","06","04") Тогда
			Форма.СчитатьЧерезНДС.Доступность(0); 
		КонецЕсли;
	КонецЕсли;
	Если Найти("РаботникСклада/НачальникСклада", НазваниеНабораПрав()) <> 0 Тогда
		Форма.Отгружен.Видимость(1);
		Форма.ВРаботу.Видимость(1);
		Форма.Отгружен.Доступность(1);
		Форма.ВРаботу.Доступность(1);
	Иначе
		Форма.Отгружен.Видимость(0);
		Форма.ВРаботу.Видимость(0);
		Форма.Отгружен.Доступность(0);
		Форма.ВРаботу.Доступность(0);
	КонецЕсли;
	Если ПустоеЗначение(Грузополучатель) = 1 Тогда
		Форма.Грузопол.Видимость(0);
		Форма.Грузополучатель.Видимость(0);
	КонецЕсли;
	

	// Если открыли только на просмотр, то надо кнопки сделать недоступными
	//Если Форма.ТолькоПросмотр()=1 Тогда
	//	Форма.КнФирма.Доступность(0);
	//	Форма.КнОплата.Доступность(0);
	//	//	Форма.КнОснование.Доступность(0);
	//	
	//	//	Форма.кнПодборПоПрайсу.Доступность(0);
	//	//	Форма.кнПодборПоКаталогу.Доступность(0);
	//	//	Форма.кнИзменитьСостав.Доступность(0);
	//	
	//	Форма.КнЗаписать.Доступность(0);
	//	Форма.КнПровести.Доступность(0);
	//	Форма.ОК.Доступность(0);
	//	Форма.КнопкаПоУмолчанию("Закрыть");
	//Иначе
	//	Форма.КнопкаПоУмолчанию("ОК");
	//КонецЕсли;
	
	ВыборГлубины();
	ОбновитьНадписи();
	УправлениеВидомКолонок();
	
	СтараяДата		= ДатаДок;
	СтарыйКлиент	= Клиент;
	
	Если Доставка=1 Тогда
		Форма.ЦенаД.Доступность(1); 
		Форма.ВалютаД.Доступность(1);
		Форма.ВалютаД.Доступность(1);
		Форма.СрочнаяДоставка.Доступность(1);
	ИначеЕсли Доставка =0 Тогда
		Форма.ЦенаД.Доступность(0); 
		Форма.ВалютаД.Доступность(0);
		Форма.ВалютаД.Доступность(0); 
		Форма.СрочнаяДоставка.Доступность(0);
	КонецЕсли;
	
	глУстановкаРеквизитаТип(Контекст);
	Тип.ДобавитьЗначение("Упр.");
	Тип.ДобавитьЗначение("Общ.");
	Тип.ДобавитьЗначение("Фин.");
	Тип.ТекущаяСтрока(ТипУчета+1);
	глПриСменеТипа(Контекст);
	Если (Получен = 1) И (ПустаяСтрока(КтоПринялЛицДоговор) = 0) Тогда
		ТекстПолучения="Договор получен "+ДатаПринятияЛицДоговора+" "+КтоПринялЛицДоговор;
	КонецЕсли; 
	
	Если ДатаДок < Константа.ДатаВведенияРасчета Тогда //Не применяем расчет для даты раньше
		
		ВыбратьСтроки();
			
			Пока ПолучитьСтроку() = 1 Цикл
			
			ЦенаВУЕ = 0;
			Форма.ЦенаВУЕ.Доступность(0);
			Форма.ЦенаВУЕ.Видимость(0);
		
		КонецЦикла;
	
	КонецЕсли;	

//Обновить пришедший товар с сайта	

КонецПроцедуры //При открытии

//*****************************************************************************
Процедура ОбработкаПодбора(пПодборка)	// предопределенная процедура
	глПриОбработкеПодбора(пПодборка, Контекст);
КонецПроцедуры // ОбработкаПодбора

//******************************************************************************
Процедура ОбработкаВнешнегоСобытия(Источник,Событие,Данные)
	// Процедура разбирает штрих-код, считанный сканером
	// и заполняет строки накладной
	Перем Упаковка,ТекКоличество, _Спецификация;
	Перем _Товар, _Единица, _Количество;
	
	Если Событие = "BarCodeValue" Тогда
		
		Если Форма.ТолькоПросмотр() = 0 Тогда
			Если глПолучитьТоварПоШтрихкоду(Данные, _Товар, _Единица, _Количество) <> 0 Тогда
				глПриОбработкеПодбора(_Товар, Контекст, _Количество);
				АктивизироватьСтроку(КоличествоСтрок());
			КонецЕсли;
		КонецЕсли;
		
		СканерШтрихКода.ПосылкаДанных = 1;
	КонецЕсли;
	
КонецПроцедуры

//*****************************************************************************
Процедура ПриЗаписи() //Предопределенная процедура
	//Если глМожноЗаписатьДокумент(Контекст)=0 Тогда
	//	СтатусВозврата(0);                        
	//ИначеЕсли глКонтрольДатыДокумента(Контекст, НачальнаяДатаДокумента)=1 Тогда
	//	СтатусВозврата(0);
	//КонецЕсли;
	Если ПроверитьОсновныеПоля() = 0 Тогда
		СтатусВозврата(0);
	КонецЕсли;	
	
	Верно=1;
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если Товар.Товар=0 Тогда
			Если ПустоеЗначение(Код)=1 Тогда
				Верно=0;
				Прервать;				    
			КонецЕсли;			    
		КонецЕсли;    
	КонецЦикла;
	
	Если Верно=1 Тогда
		Принят=Перечисление.Принят.Принят;
	Иначе
		Принят=Перечисление.Принят.Отложен;
	КонецЕсли;
  
	Если ПустоеЗначение(WebID)= 0 Тогда
		Если ДатаИсп > ДатаСборки Тогда
			Если ПустоеЗначение(ДатаИсп) = 0 Тогда
				Сообщить("Была изменена дата сборки");
				КолДнейИзменения = ДатаИсп - ДатаСборки;
				Если КолДнейИзменения > 3 Тогда
					глОтправитьXMLДляЗаказаССайта(4,WebID);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
	
КонецПроцедуры   
//*****************************************************************************
Процедура ПриЗакрытии()  //Предопределенная процедура
	//запись контекста в глобальную переменную 
	

	
	Если Выбран()=1 Тогда
		глДокументПомощника=ТекущийДокумент();
	Иначе
		глДокументПомощника="";
	КонецЕсли;
КонецПроцедуры

Процедура Чек()
	Если (Выполнен=Перечисление.Выполнен.Выполнен)и не((ИмяПользователя()="БеленькийЮрий") или (Найти("РаботникСклада/НачальникСклада", НазваниеНабораПрав()) <>0))  тогда
		Сообщить("Данный заказ уже произведен");
		КПрошивке=0;
	КонецЕсли;	
КонецПроцедуры 
Процедура Гек()
	Если ((Отгружен=Перечисление.Отгружен.ГотовКОтгрузке)или(Отгружен=Перечисление.Отгружен.Отгружен))и не((ИмяПользователя()="БеленькийЮрий") или (Найти("РаботникСклада/НачальникСклада", НазваниеНабораПрав()) <>0))  тогда
		Сообщить("Данный заказ уже собран");
		Собрать=0;
	КонецЕсли;	
КонецПроцедуры

Процедура Отложить()
	Если Отложить=1 
	Тогда 
		Отложен=Перечисление.Отложен.Отложен;
		Собрать=0;
	Иначе
		Отложен="" ;
		Собрать=1;
		Если (Отгружен=Перечисление.Отгружен.ГотовКОтгрузке)или(Отгружен=Перечисление.Отгружен.Отгружен)
		Тогда
			Сообщить("Данный заказ уже собран");
			Собрать=0;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры 

//*****************************************************************************
//Посмотрим информацию о движениях заказа                                    //
//*****************************************************************************
Процедура Информация()
	Форма.ИспользоватьСлой("Статусы",2);
КонецПроцедуры 
//*****************************************************************************
//и вернемся                                                                 //
//*****************************************************************************
Процедура Возвращение()
	Форма.ИспользоватьСлой("Основной",2);
КонецПроцедуры
//*******************************************************************************************************
Процедура ПриВводеСтроки()
	УпрКлиент = Клиент;
	УК();
	ЗначениеТипЦены = УстановитьКатегорию(УпрКлиент);    
	ТипЦены = ЗначениеТипЦены;
	
	//В связи с распоряжением СЛ, ручной ввод запрешен для документов.
	Если  Константа.РучнойВводСтрок = Перечисление.Булево.Нет Тогда //Запрещаем ввод вручную!
		Предупреждение("Ручной ввод возможен только для скидки "+РазделительСтрок+" Ввод вручную запрещен.");
		СтатусВозврата(0);
	КонецЕсли;
	
КонецПроцедуры  

Процедура ПриРедактированииНовойСтроки()
	
КонецПроцедуры	


//*******************************************************************************************************
Процедура ПриНачалеРедактированияСтроки()
	//В связи с распоряжением СЛ, ручной ввод запрешен для документов.
	Если  Константа.РучнойВводСтрок = Перечисление.Булево.Нет Тогда //Запрещаем ввод вручную!
		Форма.Товар.Доступность(0);
   		Форма.НомерСтроки.Доступность(0);
   		Форма.Количество.Доступность(0);
   		Форма.Единица.Доступность(0);
   		Форма.ЦенаБезНДС.Доступность(0);
   		Форма.Цена.Доступность(0);
   		Форма.Сумма.Доступность(0);
   		Форма.СуммаНП.Доступность(0);
   		Форма.Хозяин.Доступность(0);
   		Форма.СуммаД.Доступность(0);
   		Форма.СуммаП.Доступность(0);
   		Форма.ЦенаВУЕ.Доступность(0);
   		Форма.Готов.Доступность(0); //Может где-то используется, практическая польза не ясна, проверить!
   		//Поля, которые открыты на редактирование, на всякий случай откроем
   		Форма.Скидка.Доступность(1); // Поле, которое осуществляет расчет скидки на товар
        Если Товар.Товар=1 Тогда   //Видимо для HASP
			Форма.Код.Доступность(0);
		Иначе
			Форма.Код.Доступность(1);
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры  

//*******************************************************************************************************
Процедура ПриОкончанииРедактированияСтроки()
	УпрКлиент = Клиент;
	УК();
	ЗначениеТипЦены = УстановитьКатегорию(УпрКлиент);    
	ТипЦены = ЗначениеТипЦены;
	Сообщить(SDETest());
КонецПроцедуры
//*******************************************************************************************************
Процедура УправлениеДоступностью()
	Если Товар.Товар=1 Тогда 
		Код="";
		Форма.Код.Доступность(0);
	ИначеЕсли Товар.Товар=0 Тогда
		Форма.Код.Доступность(1);
	КонецЕсли;	
КонецПроцедуры 

//*******************************************************************************************************
Процедура Печать(БыстраяПечать=0,КолЭкз=0)
	флаг1 = 0;
	Фирма.ИспользоватьДату(ДатаДок);
	СуммаВключаетНДС=Константа.СуммаВключаетНДС.Получить(ДатаДок);
	
	Если УчитыватьНП=1 Тогда
		Секц="|НП";
	Иначе
		Секц="|БезНП";
	КонецЕсли;
	Таб=СоздатьОбъект("Таблица");
	СтрПлат="";
	СтрБанкПлат="";       
	//_____________________________________________________________________________/
	СтрОрганизация=""; СтрБанк=""; РасчСчет=""; БИК=""; КоррСчет="";
	глПлатежныеРеквизиты(РасчетныйСчет, СтрОрганизация, СтрБанк, РасчСчет, БИК, КоррСчет, ДатаДок);
	КлиентТелефоны = глВыдатьОбщиеТелефоныОбрезать(Клиент);
	
	Таб.ВывестиСекцию("Шапка"+Секц);
	ВыбратьСтроки();
	Ном=0;
	ВСоставе=0;
	Пока ПолучитьСтроку() = 1 Цикл
		Ном=Ном+1;                
		
		Колво		= ?(Количество = 0, 1, Количество);
		Если СуммаВключаетНДС = Нет Тогда
			Если СуммаВключаетНП=1 Тогда
				ПечЦена		= Цена - НДС/Колво - СуммаНП/Колво;
				ПечСумма = Сумма - НДС - СуммаНП;
			Иначе
				ПечЦена		= Цена - НДС/Колво;    
				ПечСумма = Сумма - НДС;    
			КонецЕсли;
		Иначе                           
			ПечЦена	= Цена;    
			ПечСумма= Сумма;
		КонецЕсли;       
		
		ПечЦена		= глФРМ( ПечЦена ,Валюта, 0);
		
		ПечСумма	= глФРМ( ПечСумма,Валюта, 0);
		
		ПечНП		= глФРМ( СуммаНП ,Валюта, 0);
		
		Если Набор.Выбран()=1 Тогда
			Если ПустоеЗначение(ВСоставе)=1 Тогда
				Таб.ВывестиСекцию("ВСоставе"+Секц);
				ВСоставе=Набор;
			ИначеЕсли ВСоставе<>Набор Тогда
				Таб.ВывестиСекцию("ВСоставе"+Секц);
				ВСоставе=Набор;
			КонецЕсли;
		Иначе
			Если ПустоеЗначение(ВСоставе)=0 Тогда
				ВСоставе=0;
				Таб.ВывестиСекцию("Пропуск"+Секц);
			КонецЕсли;
		КонецЕсли;
		Таб.ВывестиСекцию("Строка"+Секц);
		Если Товар.БезНДС = 1 Тогда
			флаг1 = 1;
		КонецЕсли;	
	КонецЦикла;
	
	Если ФС.СуществуетФайл(КаталогИБ()+Валюта.ИмяФайлаПрописи)=1 Тогда
		Пропись(Валюта.ИмяФайлаПрописи);
	КонецЕсли;
	
	
	СуммаВсего	= ?(СуммаВключаетНП=1,Итог("Сумма")-Итог("СуммаНП"),Итог("Сумма"));
	НДСВсего	= Итог("НДС");
	НПВсего		= Итог("СуммаНП");
	
	Если СуммаВключаетНДС=Да Тогда
		ПечВсегоСумма	= глФРМ(Итог("Сумма"),Валюта,1);
	Иначе
		ПечВсегоСумма	= глФРМ(СуммаВсего - НДСВсего,Валюта,1);
	КонецЕсли;
	
	
	ПечВсегоНДС		= глФРМ(НДСВсего,Валюта,1);
	ПечИтого		= глФРМ(СуммаВсего,Валюта,1);
	
	Если УчитыватьНП=1 Тогда
		ПечИтогоСНП=  глФРМ(СуммаВсего+НПВсего,Валюта,1);
		ПечВсегоНП =  глФРМ(НПВсего,Валюта,1);
	КонецЕсли;
	
	
	//
	ПолнаяСумма = СуммаВсего +  НПВсего;
	
	ПечИтогоНаименований = "Всего наименований "+КоличествоСтрок()+
	", на сумму "+глФРМ(ПолнаяСумма,Валюта,1);
	СуммаПрописью = "Сумма: " + Формат(ПолнаяСумма,"ЧПДС");
	Пропись("");
	
//	Если СуммаВключаетНДС=Да Тогда
Если флаг = 0 Тогда
		Таб.ВывестиСекцию("ПодвалВклНДС"+Секц);
	Иначе     
		Таб.ВывестиСекцию("ПодвалНеВклНДС"+Секц);
	КонецЕсли;
	
	Если БыстраяПечать=1 Тогда     
		Таб.ПараметрыСтраницы(,,,,,,,,,1,,);
		Таб.КоличествоЭкземпляров(?(КолЭкз>0,КолЭкз,Константа.ПечКолЭкзСчетаПриБыстройПродаже));
		Таб.Напечатать(0);
	Иначе	
		Таб.Опции(0,0,0,0,ПарСтрДок);
		Таб.Защита(Константа.ФлагЗащитыТаблиц);
		Таб.ТолькоПросмотр(1);
		Таб.Показать("Печать счета","");
	КонецЕсли;

	//ДОБАВЛЕНО ДЛЯ НДС
	Если Флаг = 1 Тогда
//	Если ПустоеЗначение(ЛицензДоговор) = 0 Тогда
			Если СоздатьЛицДоговор = 1 Тогда
				
				
			ЮрАдресКлиента = Клиент.ЮридическийАдрес;
				НаимКлиента = Клиент.Наименование;
				ИННКлиента = Клиент.ИНН;
				КППКлиента = Клиент.КПП; 
				
				Спр=СоздатьОбъект("Справочник.РасчетныеСчета"); //родитель
				Спр.ИспользоватьВладельца(Клиент.ТекущийЭлемент()); //выбираем потомков
				Спр.ВыбратьЭлементы();  //выбираем элементы
				Пока Спр.ПолучитьЭлемент() > 0 Цикл
	 				РасчСчетКлиента = Спр.Номер;
	 				БанкКлиента = Спр.БанкОрганизации;
	 				текЭлБанк = Спр.БанкОрганизации;
	 				спр2 = СоздатьОбъект("Справочник.Банки");
					спр2.НайтиЭлемент(текЭлБанк);
							КоррСчетКлиента = Спр2.КоррСчет;
	 						БИККлиента = Спр2.Код;	 
						
	 				//получаем элемент
				КонецЦикла;	
				
				ТабЛицДоговора = СоздатьОбъект("Таблица");
				ТабЛицДоговора.ИсходнаяТаблица("ЛицДоговор");
				ТабЛицДоговора.ВывестиСекцию("Шапка");
				ТабЛицДоговора.ТолькоПросмотр(1);
				ТабЛицДоговора.Показать("Лицензионный Договор",,);
			КонецЕсли;		
//		КонецЕсли;
	КонецЕсли;
	//...
	
КонецПроцедуры  

//*******************************************************************************************************
Процедура УправлениеДоставкой()
	Перем ПеревозчикВыбранный;
	Стр = "";
	Если Доставка=1 Тогда
		Форма.ЦенаД.Доступность(1); 
		Форма.ВалютаД.Доступность(1);
		Форма.Перевозчик.Доступность(1); 
		Форма.СрочнаяДоставка.Доступность(1);
		
		// Найдём фирмы которые возят в этот город
		Список	= СоздатьОбъект("СписокЗначений");
		//ТЗ.НоваяКолонка("Перевозчик");
		//ТЗ.НоваяКолонка("ЦенаДоставки");
		//ТЗ.НоваяКолонка("ВалютаДоставки");
		
		Перевозчики = СоздатьОбъект("Справочник.Перевозчики");
		
		Перевозчики.ИспользоватьВладельца(Клиент.Город);
		Перевозчики.ВыбратьЭлементы();
		Пока Перевозчики.ПолучитьЭлемент() = 1 Цикл
	
			Стр = Перевозчики.ТекущийЭлемент().Перевозчик.Наименование; 
			ОбщийВес=0;
			ВыбратьСтроки();
			Пока ПолучитьСтроку()=1 Цикл
				Если Товар.Выбран() = 0 Тогда
					Возврат;
				КонецЕсли;
				ОбщийВес=ОбщийВес+Товар.Вес*Количество;	
			КонецЦикла; 
			//Форма.Вес.Заголовок(ОбщийВес);
			//расчет веса 
			
			ПрайсД = СоздатьОбъект("Справочник.Прайс_Доставки");
			ДИАД   = СоздатьОбъект("Справочник.ПределыПоПрайсу_Доставки");
			ЦСПД   = СоздатьОбъект("Справочник.ЦеныПрайса_Доставки");
			
            Зона = Перевозчики.Зона;
            ПрайсД.ИспользоватьВладельца(Перевозчики.Перевозчик);
			Если ПрайсД.НайтиПоКоду(Зона,1)=1 Тогда 
				НужныйРегион=ПрайсД.ТекущийЭлемент();  
				ДИАД.ИспользоватьВладельца(НужныйРегион);
				ДИАД.ВыбратьЭлементы();
				Пока ДИАД.ПолучитьЭлемент()>0 Цикл  
					Если (ДИАД.ТекущийЭлемент().ПометкаУдаления()=0)
					и (ОбщийВес<=ДИАД.До)
					и (ОбщийВес>=ДИАД.От) Тогда
						НашДиапозон=ДИАД.ТекущийЭлемент();
						
						ЦСПД.ИспользоватьВладельца(НужныйРегион);
						ЦСПД.НайтиПоРеквизиту("Диапозон",НашДиапозон,0);
						
						Если СрочнаяДоставка=1 Тогда  
							НашаЦена   = ЦСПД.ТекущийЭлемент().ЦенаС.Получить(Дата_Курса);
							НашаВалюта = ЦСПД.ТекущийЭлемент().ВалютаС;    
						Иначе
							НашаЦена   = ЦСПД.ТекущийЭлемент().Цена.Получить(Дата_Курса);
							НашаВалюта = ЦСПД.ТекущийЭлемент().Валюта;
						КонецЕсли;
						
					КонецЕсли;
				КонецЦикла;
				
				Стр = Стр+"   за "+ НашаЦена;
				Стр = Стр+" "+ НашаВалюта;
			КонецЕсли;	
			Список.ДобавитьЗначение(Перевозчики.ТекущийЭлемент(),Стр); 
		КонецЦикла;
		
		
		Если Доставка=0 Тогда
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;	
		Если Список.РазмерСписка() = 0 Тогда
			// ничего отобрать не удалось. сообщим об этом.
			Предупреждение("По имеющейся на данный момент информации в город"+Клиент.Город.Наименование +" нет доставки");
			СтатусВозврата(0);
			Возврат;
		КонецЕсли;
		
		// выберем из списка перевозчика
		Если Список.ВыбратьЗначение(ПеревозчикВыбранный, "Выберите перевозчика!") = 0 Тогда
			// отказ от выбора
			СтатусВозврата(0);
			Возврат;
		Иначе
			Перевозчик =  ПеревозчикВыбранный.Перевозчик;
		КонецЕсли;
		ПриВыбореПеревозчика();
	ИначеЕсли Доставка =0 Тогда
		
		ЦенаД=0; 
		ВалютаД=0; 
		СрочнаяДоставка=0;
		Перевозчик=""; 
		
		Форма.ЦенаД.Доступность(0); 
		Форма.ВалютаД.Доступность(0);
		Форма.Перевозчик.Доступность(0);
		Форма.СрочнаяДоставка.Доступность(0);
		
		ПересчетД();
		
	КонецЕсли;
КонецПроцедуры  

//*******************************************************************************************************
Процедура Пересчет()
	
	ВыбратьСтроки();
	
	Пока ПолучитьСтроку()=1 Цикл
		
		Если Товар.Выбран() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Сумма   = Сумма-СуммаП;
		СуммаП  = Сумма*ПлюсПр/100;
		Цена    = Сумма*((ПлюсПр+100)/100)/Количество;
		Сумма	= Цена*Количество;
		
	КонецЦикла; 
	
КонецПроцедуры
//*******************************************************************************************************
Процедура Резервировать()
	Если (Отгружен=Перечисление.Отгружен.ГотовКОтгрузке)или(Отгружен=Перечисление.Отгружен.Отгружен) тогда
		Сообщить("Данный заказ уже отгружен или частично отгружен и его нельзя резервировать");
		РезервФлажок =0;
		Резервировать = НЕТ;
	Иначе
		Если 
		РезервФлажок =1
		Тогда         
			Резервировать = ДА;	
		Иначе              
			Резервировать = НЕТ;	
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры	
//*******************************************************************************************************
Процедура ПриВыбореСЧНДС()
	Если (Валюта<>Рубли) И (СчитатьЧерезНДС = 1)
	Тогда
		Предупреждение("Такой заказ желательно вводить в рублях");
	КонецЕсли;
	ВыбратьСтроки();
	
	Пока ПолучитьСтроку()=1 Цикл
		
		Если Товар.Выбран() = 0 Тогда
			Возврат;
		КонецЕсли;
		глВыч_суммы_накл(Контекст);
		
	КонецЦикла; 	
КонецПроцедуры   
//*******************************************************************************************************
Процедура ПриВыбореДляБанков()
	СчитатьЧерезНДС = 1;
	ВыбратьСтроки();
	
	Пока ПолучитьСтроку()=1 Цикл
		
		Если Товар.Выбран() = 0 Тогда
			Возврат;
		КонецЕсли;
		глВыч_суммы_накл(Контекст);
		
	КонецЦикла; 	
КонецПроцедуры
//*******************************************************************************************************
Процедура ПриВыбореБезНДС()
	Если БезНДС =1 Тогда
		СчитатьЧерезНДС =1 ;
		ПриВыбореСЧНДС();	
	Иначе 
		СчитатьЧерезНДС =0; 
		ВыбратьСтроки();
		
		Пока ПолучитьСтроку()=1 Цикл
			ПроверитьЦену(); 
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры
//*******************************************************************************************************                     
Процедура ВыбранВРаботу()   
	Если Найти("ФинДиректор/Администратор/НачальникСклада/РаботникСклада/ОтделОтгрузки", НазваниеНабораПрав()) = 0 Тогда
		СтатусВозврата(0);
	КонецЕсли;
КонецПроцедуры
//*******************************************************************************************************                     
Процедура ПриВыбореКода()
	Если Товар.ТипКлюча<>Код.ТипКлюча Тогда
		Предупреждение("Указанный код "+Код.ТипКлюча +" не соответствует коду товару "+Товар.ТипКлюча+" !")
	КонецЕсли;
	
	Хозяин=Код.Владелец;
	
КонецПроцедуры
//*******************************************************************************************************               

Процедура ПроверитьФайл(ПолноеИмяФайлаОтвета,НашЗаказ)
	Если Константа.НормальнаяРабота=0 Тогда
		ФайлОтвета=СоздатьОбъект("ФС");
		ТекстОтвета=СоздатьОбъект("Текст");
		
		ИмяФайлаОтвета=""+НашЗаказ+"_1.faq";
		ПолноеИмяФайлаОтвета=СокрЛП(Константа.ДиректорияФайлаОтвета)+ИмяФайлаОтвета;
		
		Если ФайлОтвета.СуществуетФайл(ПолноеИмяФайлаОтвета)=1 Тогда
			Попытка
				ТекстОтвета.Открыть(ПолноеИмяФайлаОтвета);
				Если ТекстОтвета.КоличествоСтрок()<>0 Тогда
					
					Стр=ТекстОтвета.ПолучитьСтроку(1);
					Стр=Лев(Стр,5);
					Готово=Число(Стр);
					
					Сообщить("Изготовлено изделий: "+Готово+" шт.");				
					
					ПрогЗак=СоздатьОбъект("Справочник.ПрогЗаказы");
					Если ПрогЗак.НайтиПоКоду(НашЗаказ.Код,0)=0 Тогда
						Предупреждение("Первичная информация о заказе отсутствует")
					Иначе
						ПрогЗак.Сдано = ПрогЗак.Сдано+Готово;
						ПрогЗак.Записать();
					КонецЕсли;
					
					Если Не(ПрогЗак.Сдано<Количество) Тогда
						Готов=1;
						Количество=ПрогЗак.Сдано;
					ИначеЕсли	(ПрогЗак.Сдано<Количество) и (ПрогЗак.Сдано>0) Тогда
						Готов=2;
					КонецЕсли;
					
				КонецЕсли;
			Исключение
				Предупреждение("Идет производство!");
				ПроверитьФайл(ПолноеИмяФайлаОтвета,НашЗаказ);
			КонецПопытки;
		КонецЕсли;
	Иначе 
		
		Готово=Количество;			
		
		ПрогЗак=СоздатьОбъект("Справочник.ПрогЗаказы");
		Если ПрогЗак.НайтиПоКоду(НашЗаказ.Код,0)=0 Тогда
			Предупреждение("Первичная информация о заказе отсутствует")
		Иначе
			ПрогЗак.Сдано = ПрогЗак.Сдано+Готово;
			ПрогЗак.Записать();
		КонецЕсли;
		
		Если Не(ПрогЗак.Сдано<Количество) Тогда
			Готов=1;
			Количество=ПрогЗак.Сдано;
		ИначеЕсли	(ПрогЗак.Сдано<Количество) и (ПрогЗак.Сдано>0) Тогда
			Готов=2;
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры  

//*******************************************************************************************************
Функция НомерПиктограммы()
	Если Готов= 1 Тогда
		НомПикт = 1;
	КонецЕсли;
	
	Возврат НомПикт;
КонецФункции //НомерПиктограммы 

//*******************************************************************************************************
Процедура Производство()  
	
	Предупреждение("Данный документ в целях производства не используется !");
	СтатусВозврата(0);
	Возврат;	
	
	Если ВРаботу=0 Тогда
		Предупреждение("По данному заказу работы производить нельзя");
		СтатусВозврата(0);
		Возврат;
	КонецЕсли;	
	
	Записать();
	
	Продолжаем=0;
	
	Если (ПустоеЗначение(Константа.DCBASE)=1) или (ПустоеЗначение(Константа.DCFILE)=1) Тогда
		Предупреждение("Не указан путь к DC базе");
		СтатусВозврата(0);
	КонецЕсли;
	
	ЧтоЗапустим=СокрЛП(Константа.DCBAse)+ СокрЛП(Константа.DCFile);
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если Товар.Товар=0 Тогда
			Если Готов=2 Тогда
				Если Вопрос("Есть прерванные заказы. Продолжить?", "Да+Нет") = "Да" Тогда
					Продолжаем=2;
				Иначе
					Продолжаем=0;
				КонецЕсли;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	
	ВыбратьСтроки();
	Пока ПолучитьСтроку()=1 Цикл
		Если Товар.Товар=0 Тогда
			Если Вопрос("Работаем или кто?","Да+Нет")="Да" Тогда
				Если Готов=Продолжаем Тогда
					
					ПрогЗак=СоздатьОбъект("Справочник.ПрогЗаказы");
					
					ПрогЗак.ВыбратьЭлементыПоРеквизиту("Документ",ТекущийДокумент(),,);
					Если ПрогЗак.ПолучитьЭлемент()=0 Тогда 
						Если ПрогЗак.ПометкаУдаления()=0 Тогда
							ПрогЗак.Новый();
							ПрогЗак.Документ   = ТекущийДокумент();
							ПрогЗак.ДатаПрогр  = ТекущаяДата();
							ПрогЗак.Товар      = Товар;
							ПрогЗак.Количество = Количество;
							ПрогЗак.ПрогКод    = Код.Наименование;
							ПрогЗак.Записать();
							НашЗаказ=ПрогЗак.ТекущийЭлемент();
						КонецЕсли;
					Иначе
						Нашли=0;				
						ПрогЗак.ВыбратьЭлементы();
						Пока ПрогЗак.ПолучитьЭлемент()=1 Цикл
							Если (ПрогЗак.Документ = ТекущийДокумент()) и (ПрогЗак.Товар   = Товар) и (СокрЛП(ПрогЗак.ПрогКод)    = СокрЛП(Код.Наименование)) Тогда	
								Если ПрогЗак.ТекущийЭлемент().ПометкаУдаления()=0 Тогда
									НашЗаказ=ПрогЗак.ТекущийЭлемент(); 
									Нашли =1;
									Прервать;
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
						
						Если Нашли=0 Тогда
							ПрогЗак.Новый();
							ПрогЗак.Документ   = ТекущийДокумент();
							ПрогЗак.ДатаПрогр  = ТекущаяДата();
							ПрогЗак.Товар      = Товар;
							ПрогЗак.Количество = Количество;
							ПрогЗак.ПрогКод    = Код.Наименование;
							ПрогЗак.Записать();
							НашЗаказ=ПрогЗак.ТекущийЭлемент(); 
							
						Иначе				
							Если ПрогЗак.Количество<>Количество Тогда
								Если Вопрос("В документе изменено количество товара по сравнению
								|с ранее имеющимися данными. Изменить информацию о заказе?", "Да+Нет") = "Да" Тогда 	
									ПрогЗак.Количество = Количество;
									ПрогЗак.Записать();
								КонецЕсли;
							КонецЕсли;
							НашЗаказ = ПрогЗак.ТекущийЭлемент();
						КонецЕсли;
					КонецЕсли;
					
					Файл=СоздатьОбъект("ФС");
					
					ИмяФайла="basis.txt" ;
					
					Директория=Строка(СокрЛП(Константа.DCBAse));
					ДиректорияОшибки=Строка(СокрЛП(Константа.DCBAse)+"temp\");
					ПолныйПуть=Директория+ИмяФайла;
					НовоеИмя=""+НашЗаказ.Код+".ini";
					НовыйПолныйПуть=ДиректорияОшибки+НовоеИмя;
					
					Файл.КопироватьФайл(ПолныйПуть,НовыйПолныйПуть,1);
					
					ТекстФайла=СоздатьОбъект("Текст");
					ТекстФайла.КодоваяСтраница(0);
					
					//1
					Стр="[File Name]";
					ТекстФайла.ДобавитьСтроку(Стр);
					//2
					Стр="errFile="+ДиректорияОшибки +"err"+НовоеИмя;
					ТекстФайла.ДобавитьСтроку(Стр);
					//3
					Стр="";
					ТекстФайла.ДобавитьСтроку(Стр);
					
					//4
					Стр="[tblord]";
					ТекстФайла.ДобавитьСтроку(Стр);
					//5
					Стр="OrdNum="+НашЗаказ;
					ТекстФайла.ДобавитьСтроку(Стр);
					//6
					Стр="Date="+Прав("0"+ДатаЧисло(ДатаДок),2)+"/"+Прав("0"+ДатаМесяц(ДатаДок),2)+"/"+Прав(ДатаГод(ДатаДок),2);
					ТекстФайла.ДобавитьСтроку(Стр);
					//7
					Стр="Rem=";
					ТекстФайла.ДобавитьСтроку(Стр);
					//8
					Стр="";
					ТекстФайла.ДобавитьСтроку(Стр);
					
					//9
					Стр="[tblOrdLines]";
					ТекстФайла.ДобавитьСтроку(Стр);
					//10
					Стр="LineNum=1";
					ТекстФайла.ДобавитьСтроку(Стр);
					//11
					Стр="ItemCode="+Товар.ItemCode;
					ТекстФайла.ДобавитьСтроку(Стр);
					//12
					Стр="ItemColor="+Товар.Цвет.Код;
					ТекстФайла.ДобавитьСтроку(Стр);
					//13
					Стр="Quan="+Количество;
					ТекстФайла.ДобавитьСтроку(Стр);
					//14
					Стр="ExtCode="+Код;
					ТекстФайла.ДобавитьСтроку(Стр); 
					//15
					Стр="Rem=";
					ТекстФайла.ДобавитьСтроку(Стр);
					//16
					Стр="Stat=0";
					ТекстФайла.ДобавитьСтроку(Стр);
					//17
					Стр="Where=1";
					ТекстФайла.ДобавитьСтроку(Стр);
					//18
					Стр="intOrdnum=";
					ТекстФайла.ДобавитьСтроку(Стр);
					//19
					Стр="";
					ТекстФайла.ДобавитьСтроку(Стр);
					
					//20
					Стр="[tblCust]";
					ТекстФайла.ДобавитьСтроку(Стр);
					//21
					Стр="CustNum="+Код.Владелец.Код;
					ТекстФайла.ДобавитьСтроку(Стр);
					//22
					Стр="CustName="+Код.Владелец;
					ТекстФайла.ДобавитьСтроку(Стр);
					//23
					Стр="CustTel="+Клиент.Телефоны;
					ТекстФайла.ДобавитьСтроку(Стр);
					//24
					Стр="CustFax=";
					ТекстФайла.ДобавитьСтроку(Стр);
					//25
					Стр="CustEmail="+Клиент.ЭлПочта;
					ТекстФайла.ДобавитьСтроку(Стр);
					//26
					Стр="";
					ТекстФайла.ДобавитьСтроку(Стр);
					
					//27
					Стр="[tblAddSalesOrdData]";
					ТекстФайла.ДобавитьСтроку(Стр);
					//28
					Стр="StickerType=1";
					ТекстФайла.ДобавитьСтроку(Стр);
					//29
					Стр="StickerSN=";
					ТекстФайла.ДобавитьСтроку(Стр);
					//30
					Стр="Worker=Viktor Duna";
					ТекстФайла.ДобавитьСтроку(Стр);
					//31
					Стр="";
					ТекстФайла.ДобавитьСтроку(Стр);
					
					//32
					Стр="[tblProd]";
					ТекстФайла.ДобавитьСтроку(Стр);
					//33
					Стр="HW=1.0";
					ТекстФайла.ДобавитьСтроку(Стр);
					
					ТекстФайла.Записать(НовыйПолныйПуть);
					
					Сообщить("Файл передачи данных <"+НовоеИмя+"> создан.");
					//Здесь указывается запускаемый файл
					КомандаСистемы(Строка(ЧтоЗапустим+ " "+НашЗаказ.Код));
					
					ПроверитьФайл(ПолноеИмяФайлаОтвета,НашЗаказ);
					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры 

//******************************************************************************
Процедура ПриСменеНаличности() 	
	
	Есть=0;
	Инфо=""; 
	СумСчета=0;
	ОСумме=0;
	ПодчДокументы=СоздатьОбъект("Документ");
	Если
	ТекущийДокумент().Выбран()=1
	Тогда
		ПодчДокументы.ВыбратьПодчиненныеДокументы("01.01.02",ТекущаяДата(),ТекущийДокумент()); 
		Пока ПодчДокументы.ПолучитьДокумент()=1 Цикл
			Если ПодчДокументы.Вид()="Счет" Тогда 
				Есть=1; 
				СумСчета=ПодчДокументы.Итог("Сумма");
				СумСчета=глПересчет(СумСчета,ПодчДокументы.Валюта,ПодчДокументы.Курс,Рубли,1); 
				ОСумме=" "+СумСчета+Рубли.Наименование;
				Инфо=Инфо+" "+ПодчДокументы.Вид()+" № "+СокрЛП(ПодчДокументы.НомерДок)+Окр(ОСумме,2);
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;	
	Если Нал=1 Тогда
		Если Есть=1 тогда 
			Если  Вопрос("По данному заказу выставлены счета.Исправить на наличный расчет ? ","Да+Нет")="Нет" тогда 
				Нал=0;	
			КонецЕсли;	
		КонецЕсли;
		Кратность=Валюта.Кратность.Получить(Дата_Курса);
		
		Если  Валюта<>Рубли //Чтобы курс при рублёвой валюте не менялся при переходе на нал
		Тогда
			Курс=Валюта.КурсНал.Получить(Дата_курса)/?(Кратность=0,1,Кратность);		
		КонецЕсли;		
		СчитатьЧерезНДС = 0;
	КонецЕсли;	
	Если Нал=0 Тогда  
		инф= Инфо;
		Курс		= глКурсДляВалюты(Валюта, Дата_курса);	
	КонецЕсли;	
	
КонецПроцедуры

Процедура ВыборДоговора() 
	перем нд;
	Если ПустоеЗначение(Клиент)=0 тогда
		СписокДоговоров=СоздатьОбъект("ТаблицаЗначений");
		СписокДоговоров. НоваяКолонка("Договор",,,,,25,,);
		СписокДоговоров. НоваяКолонка("Тип_договора","Строка",42,,,,,);
		СписокДоговоров. НоваяКолонка("Дата_окончания",,,,,,,);
		СвойстваТоваров = СоздатьОбъект("Документ.Договор");
		Контрики = СоздатьОбъект("Справочник.Контрагенты");
		Контрики.НайтиПоКоду(Клиент.Код);
		СвойстваТоваров.ВыбратьДокументы();
		Пока СвойстваТоваров.ПолучитьДокумент() = 1 Цикл
			Если СвойстваТоваров.Контрагент=Контрики.ТекущийЭлемент() Тогда
				Если СвойстваТоваров.ПометкаУдаления() = 0 Тогда 
					Если  СвойстваТоваров.Окончание>ТекущаяДата() Тогда 
						СписокДоговоров.НоваяСтрока();
						СписокДоговоров.Тип_договора= СвойстваТоваров.ТипДоговора.Наименование;
						СписокДоговоров.Дата_окончания= СвойстваТоваров.Окончание;
						СписокДоговоров.Договор = СвойстваТоваров.ТекущийДокумент();
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;  
		Если  СписокДоговоров.КоличествоСтрок()>0 тогда
			Если СписокДоговоров.ВыбратьСтроку(НД,"Выберите Договор")=1 Тогда 
				СписокДоговоров.ПолучитьСтрокуПоНомеру(НД);
				НДоговор= СписокДоговоров.договор;
				КатегорияЦен= СписокДоговоров.договор.ТипДоговора.ТипЦен;
				ОбновитьНадписи();
			Иначе Сообщить("Действующих договоров нет! Будте любезны заключите сначала договор!");
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры	

//******************************************************************************
Процедура ПриСменеТипа() //В случае смены типа учёта на управл. предполагается смена формы оплаты и курса с безнала на нал
	
	Если  ТипУчета=Упр Тогда 
		Нал=1;
		ПриСменеНаличности();
	КонецЕсли
	
КонецПроцедуры
//*****************************************************************************

//Инициализирум список действий по кнопке "Действия"
СписокДействий = СоздатьОбъект("СписокЗначений");
СписокДействий.ДобавитьЗначение("Структура подчиненности");
СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
СписокДействий.ДобавитьЗначение("Обновление цен в справочнике");
СписокДействий.ДобавитьЗначение("Ввести на основании");
СписокДействий.ДобавитьЗначение("Открыть в журнале");
СписокДействий.ДобавитьЗначение("Загрузить");
СписокДействий.ДобавитьЗначение("Выгрузить (отправить по эл.почте)");
Форма.Партнер.Доступность(0);
		  Форма.Получен.Доступность(0);
		  Форма.СоздатьЛицДоговор.Доступность(0);
		  Форма.ЛицензДоговор.Доступность(0);
		  ТекстПолучения="Получен";
		  
//Logging SDE procesess
sde_loggin = 1; //if 0 then off
		
